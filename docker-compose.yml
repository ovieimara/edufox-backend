version: '3'

services:
    cloudsql-proxy:
      image: postgres
      environment:
        POSTGRES_DB: 'edufox_db'
        POSTGRES_USER: 'admin'
        POSTGRES_PASSWORD: '_edufox@123A'
      ports:
        - 127.0.0.1:5432:5432

    # cloudsqlproxy:
    #     container_name: cloudsql-proxy
    #     image: gcr.io/cloudsql-docker/gce-proxy
    #     volumes:
    #     - ./creds.json:/creds.json
    #     ports:
    #     - 127.0.0.1:5432:5432
    #     command: /cloud_sql_proxy -instances="edufox-services:us-central1:edufox-db-instance"=tcp:0.0.0.0:5432 -credential_file=/creds.json
    #     # restart: always

    app:
      build: .
      volumes:
          - .:/usr/src/app
        #   - ./creds.json:/creds.json

      ports:
          - "8000:8000"

    #   env_file:
    #       - ./.env

      depends_on:
          - cloudsqlproxy
      

# services:
#   app:
#     container_name: edufox-app
#     build:
#       context: .
#     ports:
#       - 8000:8000
#     volumes:
#       - .:/usr/src/app
#       - ./creds.json:/secrets/creds.json
#     env_file:
#       - ./.env
#     # restart: always

# # The proxy will help us connect to remote CloudSQL instance locally.
# # Make sure to turn off any VPNs for the proxy to work.
#   cloudsqlproxy:
#     container_name: cloudsql-proxy
#     image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
#     volumes:
#       - ./creds.json:/secrets/cloudsql/creds.json
#     ports:
#       - 127.0.0.1:5432:5432
#     command: /cloud_sql_proxy -instances="edufox-services:us-central1:edufox-db-instance"=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/creds.json
#     # restart: always

