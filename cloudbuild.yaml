#  # Copyright 2020 Google LLC
# #
# # Licensed under the Apache License, Version 2.0 (the "License");
# # you may not use this file except in compliance with the License.
# # You may obtain a copy of the License at
# #
# #      http://www.apache.org/licenses/LICENSE-2.0
# #
# # Unless required by applicable law or agreed to in writing, software
# # distributed under the License is distributed on an "AS IS" BASIS,
# # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# # See the License for the specific language governing permissions and
# # limitations under the License.

# # [START cloudrun_django_cloudmigrate]
# steps:
#   - id: "build image"
#     name: "gcr.io/cloud-builders/docker"
#     args: ["build", "-t", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}", "."]

#   - id: "push image"
#     name: "gcr.io/cloud-builders/docker"
#     args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]

#   - id: "apply migrations"
#     name: "gcr.io/google-appengine/exec-wrapper"
#     args:
#       [
#         "-i",
#         "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
#         "-s",
#         "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
#         "-e",
#         "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
#         "--",
#         "python",
#         "manage.py",
#         "migrate",
#       ]

#   - id: "collect static"
#     name: "gcr.io/google-appengine/exec-wrapper"
#     args:
#       [
#         "-i",
#         "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
#         "-s",
#         "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
#         "-e",
#         "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
#         "--",
#         "python",
#         "manage.py",
#         "collectstatic",
#         "--verbosity",
#         "2",
#         "--no-input",
#       ]

# substitutions:
#   _INSTANCE_NAME: edufox-db-instance
#   _REGION: us-central1
#   _SERVICE_NAME: edufox-api-service
#   _SECRET_SETTINGS_NAME: django_settings

# images:
#   - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
# timeout: 7200s
# # [END cloudrun_django_cloudmigrate]

steps:
  # 0. Docker Build
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build

  # 1. Docker push to Google Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push

  # 2. Make migrations
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'makemigrations'
    id: Make migrations

  # 3. Migrate
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'migrate'
    id: Migrate

    # 4. Collect static
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'collectstatic'
      - '--no-input'
    id: Collect static

  # 5. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS'
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud

# Store images in Google Artifact Registry
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed