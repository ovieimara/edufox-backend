name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  # USE_CLOUD_SQL_AUTH_PROXY: ovie
  # GOOGLE_APPLICATION_CREDENTIALS : ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  # GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  # GS_BUCKET_NAME: ${{ secrets.GS_BUCKET_NAME }}
  # EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
  # EMAIL_HOST : ${{ secrets.EMAIL_HOST }}
  # EMAIL_PORT : ${{ secrets.EMAIL_PORT }}
  # EMAIL_HOST_USER : ${{ secrets.EMAIL_HOST_USER }}
  # EMAIL_HOST_PASSWORD : ${{ secrets.EMAIL_HOST_PASSWORD }}
  # DB_ENGINE : ${{ secrets.DB_ENGINE }}


  # USE_CLOUD_SQL_AUTH_PROXY: ${{ secrets.USE_CLOUD_SQL_AUTH_PROXY }}

#   DATABASE_URL: postgres://admin:_edufox@123A@//cloudsql/edufox-services:us-central1:edufox-db-instance/edufox_db
#   GS_BUCKET_NAME: edufox-bucket
#   EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
#   EMAIL_HOST: smtp.gmail.com
#   EMAIL_PORT: 587
#   EMAIL_HOST_USER: app.edufox@gmail.com
#   EMAIL_HOST_PASSWORD: sofeipbagutmjhkc
    

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, 3.10.8]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      env:
        GOOGLE_APPLICATION_CREDENTIALS : ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Build containers
      # env:
      #   GOOGLE_CREDENTIALS : ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

      #   USE_CLOUD_SQL_AUTH_PROXY: ${{ env.USE_CLOUD_SQL_AUTH_PROXY }}
      #   SECRET_KEY: ${{ env.SECRET_KEY }}
      #   DATABASE_URL: ${{ env.DATABASE_URL }}

      run: docker-compose up -d --build
  
    - name: Run Tests
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ env.SECRET_KEY }}


        SECRET_KEY: ${{ env.SECRET_KEY }}
        # USE_CLOUD_SQL_AUTH_PROXY: ovie
        # GOOGLE_CLOUD_PROJECT: ${{ env.GOOGLE_CLOUD_PROJECT }}
        DATABASE_URL: ${{ env.DATABASE_URL }}
        # GS_BUCKET_NAME: ${{ env.GS_BUCKET_NAME }}
        # EMAIL_BACKEND: ${{ env.EMAIL_BACKEND }}
        # EMAIL_HOST : ${{ env.EMAIL_HOST }}
        # EMAIL_PORT : ${{ env.EMAIL_PORT }}
        # EMAIL_HOST_USER : ${{ env.EMAIL_HOST_USER }}
        # EMAIL_HOST_PASSWORD : ${{ env.EMAIL_HOST_PASSWORD }}
        # DB_ENGINE : ${{ env.DB_ENGINE }}


      run: docker-compose run --rm -e REUSE_DB=1 -e TESTING=True app python manage.py test --keepdb
      # run: echo "KEY, $GOOGLE_APPLICATION_CREDENTIALS."